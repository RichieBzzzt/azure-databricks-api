# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Tests
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        if [ -f requirements-test.txt ]; then pip install -r requirements-test.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
  test:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [3.5, 3.6, 3.7, 3.8]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install coverage
        pip install -r requirements.txt
        pip install -r requirements-test.txt
    - name: Test with unittest and Coverage.py
      env:
        AD_CLIENT_ID: ${{ secrets.AD_CLIENT_ID }}
        AD_CLIENT_SECRET: ${{ secrets.AD_CLIENT_SECRET }}
        AD_TENANT_ID: ${{ secrets.AD_TENANT_ID }}
        DATABRICKS_REGION: ${{ secrets.DATABRICKS_REGION }}
        PAT_TOKEN: ${{ secrets.PAT_TOKEN }}
      run: |
        python -m unittest


  coverage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install coveralls coverage
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          if [ -f requirements-test.txt ]; then pip install -r requirements-test.txt; fi
      - name: Test with unittest and Coverage.py
        env:
          AD_CLIENT_ID: ${{ secrets.AD_CLIENT_ID }}
          AD_CLIENT_SECRET: ${{ secrets.AD_CLIENT_SECRET }}
          AD_TENANT_ID: ${{ secrets.AD_TENANT_ID }}
          DATABRICKS_REGION: ${{ secrets.DATABRICKS_REGION }}
          PAT_TOKEN: ${{ secrets.PAT_TOKEN }}
          COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
        run: |
          coverage run --source azure_databricks_api -m unittest
          coveralls